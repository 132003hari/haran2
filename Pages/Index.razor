@page "/"
@using Models
@inject NavigationManager NavigationManager

<PageTitle>Game Catalogue</PageTitle>

<h1>Game catalog</h1>
<div class="row-mb-4">
<div class="col-sm-6">
    <button type="button" class="btn-btn-primary" @onclick="creategame">NewGame</button>
</div>
</div>

@if(games is null)
{
    <p><em>Loading...</em></p>
}
else{
    <Deletegame Game="@currentGame" OnClose="OnDeleteModalClose">
    </Deletegame>
<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <th>Id</th>
        <th>Name</th>
        <th>price </th>
        <th>relaese date</th>
        <th></th>
        </thead>
        <tbody>
        @foreach(var game in games){
            <tr>
                <td>@game.Id</td>
                <td>@game.Name</td>
                <td>@game.Price</td>
                <td>@game.ReleaseDate.ToString("MM/dd/yyyy")</td>
                <td><button class="btn btn-primary" @onclick="(()=>Editgame(game.Id))">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-primary"data-bs-toggle="modal"data-bs-target="#deleteModal" @onclick="(()=>currentGame = game)">
                    <i class="oi oi-x"></i>
                </button>
                </td>
            </tr>

        }
        </tbody>
    </table>
}
@code{
   private Game[]? games;
   private Game? currentGame;
        protected override void OnInitialized()
        {
            games=Gameclient.GetGames();
        }
        private void  creategame(){
            NavigationManager.NavigateTo("/game");
        }
        private void Editgame(int id){
          NavigationManager.NavigateTo($"/game/{id}");
  
        }
        private void OnDeleteModalClose(bool accepted)
        {
            if(accepted)
            {
            Gameclient.DeleteGame(currentGame!.Id);
            games =Gameclient.GetGames();
            }

        }
}


